name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      image:
        description: 'The name of the Docker image to build and push'
        required: true
        type: string
      
jobs:
  build-and-push-docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Log in to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup env
        run: |
          export SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          echo "IMAGE_NAME=${{ github.repository }}/docker/${{ inputs.image }}" >> $GITHUB_ENV

          if ! [[ -f ./docker/${{ inputs.image }}/VERSION.txt ]]; then
            echo "VERSION.txt not found in ./docker/${{ inputs.image }}/"
            exit 1
          fi

          IMAGE_TAGS=""
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            
            semver=$(cat ./docker/${{ inputs.image }}/VERSION.txt | tr -d '\n')
            IMAGE_TAGS="main|${semver}|${semver}-${SHORT_SHA}"
          else
            IMAGE_TAGS="${{ github.ref_name }}|${{ github.ref_name }}-${semver}|${{ github.ref_name }}-${semver}-${SHORT_SHA}"
          fi

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            IMAGE_TAGS="${IMAGE_TAGS}|latest"
          fi
          echo "IMAGE_TAGS=${IMAGE_TAGS}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          echo hihi  ${{ env.IMAGE_TAGS }}
          echo haha ${IMAGE_TAGS}

          export tmp=huhu-${{ env.IMAGE_TAGS }}-hoho
          echo huhu ${tmp}
          echo hoho ${{ env.tmp }}

          exit 1
          docker build \
            -t ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -t ghcr.io/${{ env.IMAGE_NAME }}:latest \
            ./docker/${{ inputs.image }}

      # Push the Docker image to the registry
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Test list tags
        run: |
          token=$(curl -H "Authorization: Basic $(echo ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64)" https://ghcr.io/token\?scope\="repository:${{ env.IMAGE_NAME }}:pull" | jq '.token')
          LS_TAGS=$(curl -H "Authorization: Bearer $token" https://ghcr.io/v2/${{ env.IMAGE_NAME }}/tags/list | jq '.tags')
          echo "Existing tags: $LS_TAGS"